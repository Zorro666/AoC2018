using NUnit.Framework;

namespace Day18
{
    [TestFixture]
    public class Tests
    {
        [Test]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 10, 37 * 31, TestName = "TotalResource A 10 = 1147")]
        public void TotalResource(string[] lines, int minutes, int expected)
        {
            Program.Parse(lines);
            Program.Simulate(minutes);
            Assert.That(Program.TotalResource(), Is.EqualTo(expected));
        }

        [Test]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 0, new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, TestName = "Simulate A 0")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 1, new string[] {
".......##.",
"......|###",
".|..|...#.",
"..|#||...#",
"..##||.|#|",
"...#||||..",
"||...|||..",
"|||||.||.|",
"||||||||||",
"....||..|."
        }, TestName = "Simulate A 1")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 2, new string[] {
".......#..",
"......|#..",
".|.|||....",
"..##|||..#",
"..###|||#|",
"...#|||||.",
"|||||||||.",
"||||||||||",
"||||||||||",
".|||||||||"
        }, TestName = "Simulate A 2")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 3, new string[] {
".......#..",
"....|||#..",
".|.||||...",
"..###|||.#",
"...##|||#|",
".||##|||||",
"||||||||||",
"||||||||||",
"||||||||||",
"||||||||||"
        }, TestName = "Simulate A 3")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 4, new string[] {
".....|.#..",
"...||||#..",
".|.#||||..",
"..###||||#",
"...###||#|",
"|||##|||||",
"||||||||||",
"||||||||||",
"||||||||||",
"||||||||||"
        }, TestName = "Simulate A 4")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 5, new string[] {
"....|||#..",
"...||||#..",
".|.##||||.",
"..####|||#",
".|.###||#|",
"|||###||||",
"||||||||||",
"||||||||||",
"||||||||||",
"||||||||||"
        }, TestName = "Simulate A 5")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 6, new string[] {
"...||||#..",
"...||||#..",
".|.###|||.",
"..#.##|||#",
"|||#.##|#|",
"|||###||||",
"||||#|||||",
"||||||||||",
"||||||||||",
"||||||||||"
        }, TestName = "Simulate A 6")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 7, new string[] {
"...||||#..",
"..||#|##..",
".|.####||.",
"||#..##||#",
"||##.##|#|",
"|||####|||",
"|||###||||",
"||||||||||",
"||||||||||",
"||||||||||"
        }, TestName = "Simulate A 7")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 8, new string[] {
"..||||##..",
"..|#####..",
"|||#####|.",
"||#...##|#",
"||##..###|",
"||##.###||",
"|||####|||",
"||||#|||||",
"||||||||||",
"||||||||||"
        }, TestName = "Simulate A 8")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 9, new string[] {
"..||###...",
".||#####..",
"||##...##.",
"||#....###",
"|##....##|",
"||##..###|",
"||######||",
"|||###||||",
"||||||||||",
"||||||||||"
        }, TestName = "Simulate A 9")]
        [TestCase(new string[] {
".#.#...|#.",
".....#|##|",
".|..|...#.",
"..|#.....#",
"#.#|||#|#|",
"...#.||...",
".|....|...",
"||...#|.#|",
"|.||||..|.",
"...#.|..|."
        }, 10, new string[] {
".||##.....",
"||###.....",
"||##......",
"|##.....##",
"|##.....##",
"|##....##|",
"||##.####|",
"||#####|||",
"||||#|||||",
"||||||||||"
        }, TestName = "Simulate A 10")]
        public void Simulate(string[] lines, int minutes, string[] expected)
        {
            Program.Parse(lines);
            Program.Simulate(minutes);
            Assert.That(Program.GetMap(), Is.EqualTo(expected));
        }

        [TestCase(600)]
        [TestCase(1000)]
        [TestCase(2000)]
        [TestCase(4000)]
        [TestCase(8000)]
        [TestCase(10000)]
        public void PredictTotalResource(int minutes)
        {
            var lines = AoC.Program.ReadLines("../../../Day18/input.txt");
            Program.Parse(lines);
            Program.Simulate(minutes);
            var expected = Program.TotalResource();
            Assert.That(Program.PredictTotalResource(minutes), Is.EqualTo(expected));
        }
    }
}
